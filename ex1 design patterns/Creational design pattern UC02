//Factory pattern

// ClassroomFactory.java
public class ClassroomFactory {
    public Classroom createClassroom(String type, String name) {
        switch (type.toLowerCase()) {
            case "regular":
                return new RegularClassroom(name);
            case "q&a":
                return new QAClassroom(name);
            case "workshop":
                return new WorkshopClassroom(name);
            default:
                throw new IllegalArgumentException("Unknown classroom type: " + type);
        }
    }
}

//Workshop classroom
package VirtualClassManager;

public class WorkshopClassroom extends Classroom {
    public WorkshopClassroom(String name) {
        super(name);
    }

    @Override
    public String getType() {
        return "Workshop";
    }
}
//QA classroom
package VirtualClassManager;

public class QAClassroom extends Classroom {
    public QAClassroom(String name) {
        super(name);
    }

    @Override
    public String getType() {
        return "Q&A";
    }
}
//Regular classroom
package VirtualClassManager;

public class RegularClassroom extends Classroom {
    public RegularClassroom(String name) {
        super(name);
    }

    @Override
    public String getType() {
        return "Regular";
    }
}
